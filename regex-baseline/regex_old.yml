- name: Pattern match to get peer group
  set_fact:
    peergroup: "{{host|regex_findall('neighbor \\b[a-zA-Z_-a-zA-Z]+\\b peer group')|length}}"
    peergrouppwd: "{{host|regex_findall('neighbor \\b[a-zA-Z-a-zA-Z]\\w+\\b password 7 *')|length}}"
    peergroupippwd: "{{host|regex_findall('neighbor \\b(?:[0-9]{1,3}\\.){3}[0-9]{1,3}\\b  password 7 *')|length}}"
    peergroupip: "{{host|regex_findall('neighbor \\b(?:[0-9]{1,3}\\.){3}[0-9]{1,3}\\b peer group *')|length}}"
- name: split by lines
  set_fact: 
    peergroupsplitlines: "{{(host|regex_findall('neighbor \\b[a-zA-Z_-a-zA-Z]+\\b peer group',multiline=true)|regex_replace('\\n', '.')).split('.') }}"
  when: peergroup | int != 0
- name: split by spaces and get peer group name
  debug: 
    msg: "{{(item|regex_findall('neighbor \\b[a-zA-Z_-a-zA-Z]+\\b peer group')|regex_replace(' ', ':')).split(':').1}}"
  register: peergroupnames
  when: peergroup | int != 0
  with_items:
    - "{{peergroupsplitlines.0.split(',')}}"
- name: split by lines for pwd
  set_fact: 
    peergrouppwdsplitlines: "{{(host|regex_findall('neighbor \\b(?:[0-9]{1,3}\\.){3}[0-9]{1,3}\\b peer group *',multiline=true)|regex_replace('\\n', '-')).split('-') }}"
  when: peergroupip | int  != 0
- name: print
  debug:
    msg: "{{peergrouppwdsplitlines}}"
  when: peergroupip | int  != 0
- name: split by spaces and get peer group name for pwd
  debug: 
    msg: "{{(item|regex_findall('neighbor \\b(?:[0-9]{1,3}\\.){3}[0-9]{1,3}\\b peer group *')|regex_replace(' ', ':')).split(':').1}}"
  register: peergrouppwdnames
  when: peergroupip | int  != 0
  with_items:
    - "{{peergrouppwdsplitlines.0.split(',')}}"
- name: temp1
  debug:
    msg: "{{host|regex_findall('neighbor \\b[a-zA-Z-a-zA-Z]\\w+\\b password 7')|join(' ')}}"
  register: temp1
- name: temp2
  debug:
    msg: "{{host|regex_findall('neighbor \\b(?:[0-9]{1,3}\\.){3}[0-9]{1,3}\\b password 7')|join(' ')}}"
  register: temp2
- name: Facts 1
  assert:
    success_msg : "Baseline 1.0 Passed"
    fail_msg : "Baseline 1.0 Failed"
    that:
      - "'neighbor {{facts1.msg}} password 7' in temp1.msg"
    quiet: true
  ignore_errors: yes
  loop_control:
    loop_var: facts1
  register: factsregister1
  no_log: true
  with_items:
    - "{{peergroupnames.results}}"
- name: Facts 2
  assert:
    success_msg : "Baseline 2.0 Passed"
    fail_msg : "Baseline 2.0 Failed"
    that:
      - "'neighbor {{facts2.msg}} password 7' in temp2.msg"
    quiet: true
  #when: peergroup | int == peergrouppwd|int
  ignore_errors: yes
  loop_control:
    loop_var: facts2
  register: factsregister2
  no_log: true
  with_items:
    - "{{peergrouppwdnames.results}}"
- name: Results
  debug:
    msg: "{{factsregister1}}"
- name: Results2
  debug:
    msg: "{{factsregister2}}"