- name: Pattern match to get peer group
  set_fact:
    peergroup: "{{facts|regex_findall('neighbor \\b[a-zA-Z|A-Za-z0-9_-a-zA-Z0-9|A-Za-z0-9]+\\b peer group')|length}}"
    peergroupip: "{{facts|regex_findall('neighbor \\b(?:[0-9]{1,3}\\.){3}[0-9]{1,3}\\b peer group *')|length}}"
################################### Get Peer Group names #################################
- name: split by lines
  set_fact: 
    peergroupsplitlines: "{{(facts|regex_findall('neighbor \\b[a-zA-Z|A-Za-z0-9_-a-zA-Z0-9|A-Za-z0-9]+\\b peer group',multiline=true)|regex_replace('\n', '.')).split('.') }}"
  when: peergroup | int != 0
- name: split by spaces and get peer group name
  debug: 
    msg: "{{(peergrouploop|regex_findall('neighbor \\b[a-zA-Z|A-Za-z0-9_-a-zA-Z0-9|A-Za-z0-9]+\\b peer group')|regex_replace(' ', ':')).split(':').1}}"
  register: peergroupnames
  when: peergroup | int != 0
  loop_control:
    loop_var: peergrouploop
  with_items:
    - "{{peergroupsplitlines.0.split(',')}}"
#############################################################################################
- name: Check if password is set for PeerGroup
  assert:
    success_msg : "passed"
    fail_msg : "failed"
    that:
      - "'neighbor {{peergroupname.msg}} password 7' in facts"
  when: peergroup | int != 0
  ignore_errors: yes
  loop_control:
    loop_var: peergroupname
  register: baselinepeergroup
  no_log: true
  with_items:
    - "{{peergroupnames.results}}"
- set_fact:
    successlist: []
  no_log: yes
  when: peergroup | int != 0
- debug: 
    msg: "{{item}}"  
  with_items: "{{baselinepeergroup.results}}" 
  when: item.failed == true 
  register: tempdump
  no_log: yes
  ignore_errors: yes
- set_fact: 
    successlist: "{{successlist + [failedchk.item.peergroupname.msg]}}"
  when: failedchk.skipped is defined and peergroup | int != 0
  with_items:
    - "{{tempdump.results}}"
  loop_control:
    loop_var: failedchk
  ignore_errors: yes
  no_log: yes
########################################### Peer Group IP #######################################
- assert:
    that: 
      - "failedlist|length == 0"
    fail_msg: "Baseline failed"
    success_msg: "Baseline Success"